{"version":3,"file":"static/js/601.cd7ab903.chunk.js","mappings":"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","sources":["webpack://my-app/./src/entities/tracks/ui/TrackList.module.less?e305","entities/tracks/api/useEducation.ts","entities/tracks/ui/TrackCard.tsx","entities/tracks/ui/TrackList.tsx","webpack://my-app/./src/pages/TracksPage/ui/TracksPage.module.less?51db","pages/TracksPage/ui/TracksPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"trecksListContainer\":\"TrackList_trecksListContainer__SY0dK\",\"yearContainer\":\"TrackList_yearContainer__pwbXB\",\"yearHeader\":\"TrackList_yearHeader__4X4Lq\",\"tracksContainer\":\"TrackList_tracksContainer__sLn67\"};","import { gql, useQuery } from \"@apollo/client\"\n\nconst GET_TRACKS = gql(`\nquery GetTracks($i:TrackListInput!) {\n  esTrackList(input: $i){\n    items {\n    is_active\n    is_visible\n    max_participants\n    track_id\n    is_signed\n    name\n    sign_count\n    file\n    data\n    disciplines{\n      discipline_id\n      name\n    }\n    }\n  }\n}\n`)\n\nexport const useGetTracks = (i: any) => useQuery(GET_TRACKS, { variables: { i, }, })","import React from 'react';\nimport { IconCircleCheck, } from '@tabler/icons'\nimport clsx from 'clsx'\nimport './TrackCard.less'\nimport TooltipTgu from '@/shared/ui/TooltipTgu/TooltipTgu';\nimport { TooltipPlacementVariant } from '@/shared/ui/TooltipTgu/types';\n\nconst TrackCard = ({\n  type,\n  id,\n  is_signed,\n  is_visible,\n  handleNavigate,\n  name,\n  styles,\n  active = false,\n  role = false,\n  nameSpec,\n  is_active,\n}: any) => {\n\n  const handleRedirect = (e: any) => {\n    if (role === 'student' || role === 'student-rakus') {\n      handleNavigate(e)\n        .then(res => console.log('success'))\n        .catch(e => console.log(e))\n    } else {\n      handleNavigate(e)\n    }\n  }\n\n\n  return (\n    <>\n      <div\n        className={ clsx({\n          'card-discipline-pathway': true,\n          'card-discipline-pathway_active': is_signed,\n          'unvisible-card': !is_visible,\n        }) }\n        style={ styles }\n        onClick={ e => handleRedirect(e) }\n      >\n        <div className=\"card-discipline-pathway__title-wrapper\">\n          <div\n            className=\"card-discipline-pathway__name\"\n            style={ { width: '100%', } }\n          >\n            <div\n              style={ {\n                display: 'flex',\n                justifyContent: 'space-between',\n              } }\n            >\n              { name }\n              <div className=\"moderStatusesWrapElective\">\n                { is_signed ? (\n                  <TooltipTgu children={\n                    <IconCircleCheck\n                      style={ {\n                        color: '#7671DD',\n                        fontSize: '1.5rem',\n                        marginLeft: '.5rem',\n                      } }\n                    />\n                  }\n                  placement={ TooltipPlacementVariant.bottom }\n                  title=\"Вы записаны\" />\n\n                ) : (\n                  false\n                ) }\n            \n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-discipline-pathway__type\">\n          { type }\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default TrackCard\n","import React from 'react'\nimport { useMemo, useEffect, useState } from 'react';\nimport { Preloader } from '@/shared';\nimport cls from './TrackList.module.less';\nimport { UserRoles } from '@/shared/constants/userRoles';\nimport useRedirect from '@/shared/api/useRedirect/useRedirect';\nimport { useGetTracks } from '../api/useEducation';\nimport TrackCard from './TrackCard';\nimport { DOMAIN, EndPoints } from '@/shared/constants/endpoints';\n\ntype TrecksListProps = {\n  role: string;\n  nameSpec: {\n    namespec: string;\n    department_name: string;\n    nameprof: string;\n    group: string;\n    course: string;\n    eform: string;\n    elevel: string;\n    recordbook:string;\n  };\n  currentUserId: string;\n};\n\ntype Track = {\n  track_id: string;\n  name: string;\n  data: {\n    recruitmentYear: string;\n  };\n  is_visible: boolean;\n  is_signed: boolean;\n  is_active: boolean;\n};\n\nconst TracksList: React.FC<TrecksListProps> = ({ role, nameSpec, currentUserId }) => {\n  const [visibleYears, setVisibleYears] = useState<{ [key: string]: boolean }>({});\n  const redirect = useRedirect();\n\n  const handleNavigate = (track: Track) => {    \n    redirect(`/tracks-details`)\n  };\n\n  const params = {\n    filter:\n      role === 'student' || role === 'student-rakus'\n        ? {\n            namespec: nameSpec.namespec,\n            department: nameSpec.department_name,\n            nameprof: nameSpec.nameprof,\n            group: nameSpec.group,\n            course: nameSpec.course,\n            student_id: currentUserId,\n            recordbook:nameSpec.recordbook,\n            eform: nameSpec.eform,\n            is_moderator: false,\n            elevel: nameSpec.elevel,\n          }\n        : { is_moderator: true },\n    pagination: { offset: 0, limit: 1000 },\n    sort: [\n      { column: 'is_visible', order: 'desc' },\n      { column: 'created', order: 'desc' },\n    ],\n  };\n\n  const { data, error, loading, refetch } = useGetTracks(params);\n  console.log('data', data)\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  useEffect(() => {\n    if (data?.esTrackList?.items) {\n      const latestYear = data.esTrackList.items\n        .map((track: Track) => track.data.recruitmentYear)\n        .sort((a:number, b:number) => b - a)[0];\n      if (latestYear) {\n        setVisibleYears({ [latestYear]: true });\n      }\n    }\n  }, [data]);\n\n  const groupedTracks = useMemo(() => {\n    if (loading) return <Preloader />;\n    if (error) return <div>..error..</div>;\n\n    if (data?.esTrackList?.items) {\n      const grouped:any = data.esTrackList.items.reduce((acc: { [key: string]: Track[] }, track: Track) => {\n        const year = track.data.recruitmentYear;\n        if (!acc[year]) acc[year] = [];\n        acc[year].push(track);\n        return acc;\n      }, {});\n\n      const sortedYears = Object.keys(grouped).sort((a:any, b:any) => b - a);\n\n      return sortedYears.map((year) => (\n        <section key={year} className={cls.yearContainer}>\n          {(role !== UserRoles.STUDENT) && <header\n            className={cls.yearHeader}\n            onClick={() => setVisibleYears((prev) => ({ ...prev, [year]: !prev[year] }))}\n          >\n            Год набора: {year}\n          </header> }\n          {visibleYears[year] && (\n            <div className={cls.tracksContainer}>\n              {grouped[year].map((track:any) => (\n                <TrackCard\n                  key={track.track_id}\n                  name={track.name}\n                  type=\"Трек\"\n                  role={role}\n                  is_visible={track.is_visible}\n                  is_signed={track.is_signed}\n                  id={track.track_id}\n                  is_active={track.is_active}\n                  handleNavigate={() => handleNavigate(track)}\n                  nameSpec={nameSpec}\n                />\n              ))}\n            </div>\n          )}\n        </section>\n      ));\n    }\n\n    return null;\n  }, [data, error, loading, role, nameSpec, visibleYears]);\n\n  return <div className={cls.trecksListContainer}>{groupedTracks}</div>;\n};\n\nexport default TracksList;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"TracksPage_main__IlWak\",\"card\":\"TracksPage_card__DlNPp\",\"button\":\"TracksPage_button__-DQY0\",\"hide\":\"TracksPage_hide__YUlLI\",\"show\":\"TracksPage_show__Ng+D8\",\"Text\":\"TracksPage_Text__e6GB4\",\"Navigation\":\"TracksPage_Navigation__2jk-L\",\"Card\":\"TracksPage_Card__HFqym\"};","import TracksList from '@/entities/tracks/ui/TrackList';\nimport { MainLayout } from '@/shared/layouts';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport cls from './TracksPage.module.less';\nimport useGetRole from '@/shared/api/useGetRole/useGetRole';\n\nconst TracksPage = () => {\n\tconst currentUserId = useSelector((state: any) => state.auth.me.data.guid);\n\tconst nameSpec: any =\n\t\t'10.05.05 - Безопасность информационных технологий в правоохранительной сфере';\n\tconst role = useGetRole();\n\treturn (\n\t\t<MainLayout className={cls.main}>\n\t\t\t<TracksList\n\t\t\t\tnameSpec={nameSpec}\n\t\t\t\trole={role}\n\t\t\t\tcurrentUserId={currentUserId}\n\t\t\t/>\n\t\t\t,\n\t\t</MainLayout>\n\t);\n};\n\nexport default TracksPage;\n"],"names":["GET_TRACKS","gql","_ref","type","id","is_signed","is_visible","handleNavigate","name","styles","active","role","nameSpec","is_active","_jsx","_Fragment","children","_jsxs","className","clsx","style","onClick","e","then","res","console","log","catch","handleRedirect","width","display","justifyContent","TooltipTgu","IconCircleCheck","color","fontSize","marginLeft","placement","TooltipPlacementVariant","bottom","title","currentUserId","visibleYears","setVisibleYears","useState","redirect","useRedirect","params","filter","namespec","department","department_name","nameprof","group","course","student_id","recordbook","eform","is_moderator","elevel","pagination","offset","limit","sort","column","order","data","error","loading","refetch","i","useQuery","variables","useEffect","_data$esTrackList","esTrackList","items","latestYear","map","track","recruitmentYear","a","b","groupedTracks","useMemo","_data$esTrackList2","Preloader","grouped","reduce","acc","year","push","Object","keys","cls","UserRoles","STUDENT","prev","TrackCard","track_id","TracksPage","useSelector","state","auth","me","guid","useGetRole","MainLayout","TracksList"],"sourceRoot":""}